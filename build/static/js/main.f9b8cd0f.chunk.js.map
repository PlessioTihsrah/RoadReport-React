{"version":3,"sources":["api/api.js","history.js","components/Header.js","actions/index.js","components/CardTransparent.js","components/Carousel.js","components/Home.js","components/View.js","components/Login.js","components/Report.js","components/ViewOne.js","components/App.js","reducers/authReducer.js","reducers/locationReducer.js","reducers/postReducer.js","reducers/index.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","Content-Type","createHistory","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","isSignedIn","user","react_default","a","createElement","className","role","Fragment","NavItem","Link","to","onClick","signOut","toggle","bind","assertThisInitialized","state","isOpen","setState","getSignInStatus","Navbar","style","backgroundColor","NavbarToggler","Collapse","navbar","Nav","email","React","Component","connect","auth","_ref4","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","response","wrap","_context4","prev","next","api","get","sent","type","payload","data","isLoggedIn","stop","_x4","apply","arguments","_ref2","_callee2","_context2","post","status","_x2","CardTransparent","_ref","src","title","subtitle","link","Card","CardImg","top","alt","CardBody","CardTitle","CardText","items","altText","Carousel","UncontrolledCarousel","indicators","components_Carousel","Container","Row","CardDeck","components_CardTransparent","View","showPosts","posts","length","width","height","postss","map","index","key","_id","scope","date","concat","Table","dark","bordered","getPosts","report","_ref3","_callee3","_context3","_x3","qs","require","login","onSubmit","signIn","stringify","input","label","inputField","Input","assign","required","id","FormGroup","Label","for","Form","handleSubmit","Field","name","component","renderInput","Button","outline","color","_callee","_context","history","push","_x","reduxForm","form","Report","locError","e","preventDefault","locationError","getMap","latitude","locationYes","frameBorder","longitude","allowFullScreen","block","first","last","mobile","extra","message","htmlFor","placeholder","InputGroup","InputGroupAddon","addonType","aria-describedby","min","max","rows","getLocation","location","navigator","geolocation","getCurrentPosition","position","coords","err","ViewOne","CardFooter","getPhoto","photos","photo","Modal","modal","ModalBody","ModalFooter","getPhotos","CardColumns","getDetails","class","injuries","interview","reason","conditions","speed","match","params","getPost","CardGroup","_ref5","_callee5","_context5","_x5","App","Router","components_Header","Switch","Route","path","exact","Home","Login","INTIAL_STATE","combineReducers","undefined","action","objectSpread","formReducer","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","reduxThunk","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f9b8cd0f.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL : \"\",\n    headers:{\n        'Content-Type': 'application/x-www-form-urlencoded'\n    }\n})","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport {  Collapse, Navbar, NavbarToggler, Nav, NavItem} from 'reactstrap';\nimport { getSignInStatus, signOut } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nclass Header extends React.Component {\n      constructor(props){\n        super(props);\n      this.getData = (isSignedIn, user) =>{\n        \n        if(isSignedIn == null){\n          return(\n            <div className=\"spinner-border text-light\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n                </div>\n            )} else if(isSignedIn){\n          return (\n           <React.Fragment>\n            <NavItem>\n              <Link className=\"nav-link text-light\" to=\"#\">Hello, {user}</Link>\n            </NavItem>\n            <NavItem>\n              <Link className=\"nav-link text-light\" to=\"/view\">View All Reports</Link>\n            </NavItem>\n            <NavItem>\n              <button onClick={this.props.signOut}className=\"btn nav-link text-light\">Logout</button>\n            </NavItem></React.Fragment>\n            )} else {\n            return (\n            <React.Fragment>\n            <NavItem>\n              <Link className=\"nav-link\" to=\"/login\">Login</Link>\n            </NavItem>\n            <NavItem>\n              <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n            </NavItem>\n            </React.Fragment>\n            )}}\n      \n        \n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n      }\n    componentDidMount(){\n      this.props.getSignInStatus();\n      \n    }\n    render() {\n\n    return(\n      \n    <div>\n        <Navbar className=\"navbar navbar-expand-lg navbar-dark sticky-top\" style={{backgroundColor: 'rgba(1,1,1,0.3)'}}>\n          <Link className=\"navbar-brand\" to=\"/\">Accident Report</Link>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n            {this.getData(this.props.isSignedIn, this.props.user.email)}\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n        \n    )\n    }\n}\nconst mapStateToProps = state =>{\n  return {\n    user: state.auth.user,\n    isSignedIn : state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, {getSignInStatus, signOut})(Header);","import api from '../api/api';\nimport history from '../history';\n\n\nexport const signIn = data => async(dispatch) =>  {\n  const response = await api.post(\"/login\", data);\n  if(response.data.status === \"success\"){\n    dispatch ({\n    type: 'SIGN_IN',\n    payload: response.data.user\n  });\n  history.push(\"/\");\n  } else {\n    history.push(\"/\");\n  }\n  \n};\n\nexport const signOut = () => async(dispatch) => {\n  const response = await api.post(\"/logout\");\n  if(response.status === 200){\n  dispatch ({\n    type: 'SIGN_OUT'\n  });\n  }\n};\n\n\nexport const getPosts = () => async(dispatch) => {\n  const response = await api.get(\"/reports\");\n  if(response.status === 200){\n  dispatch ({\n    type: 'GET_POSTS',\n    payload: response.data\n  });\n  }\n};\n\nexport const getSignInStatus = () => async(dispatch) => {\n    const response = await api.get(\"/info\");\n    dispatch({\n      type: \"GET_INFO\",\n      payload : {\n        isSignedIn: response.data.isLoggedIn,\n        user: response.data.user\n      } \n      \n    })\n};\n\nexport const getPost = (id) => async(dispatch) => {\n    const response = await api.get(`/report/${id}`);\n    if(response.status === 200){\n    dispatch({\n      type: \"GET_POST\",\n      payload : response.data\n    })}\n};\n\nexport const getLocation = () => (dispatch) => {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      dispatch({\n      type: \"GET_LOCATION\",\n      payload : {\n        latitude: position.coords.latitude,\n  longitude: position.coords.longitude\n      } \n\n})\n\n}, function(err){\n  dispatch({type: \"LOCATION_ERROR\"})\n})}\n\nexport const locationError = () => {\n  return({\n    type: \"LOCATION_ERROR\"\n  })\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle } from 'reactstrap';\n\nconst CardTransparent = ({src, title, subtitle, link}) => {\n    return(\n    <Card className=\"border-light text-light\" style={{backgroundColor: 'rgba(1,1,1,0.6)'}}>\n        <CardImg top src={src} alt=\"\"/>\n        <CardBody>\n            <CardTitle>\n                <h5>{title}</h5>\n            </CardTitle>\n            <CardText>{subtitle}</CardText>\n            <Link className=\"btn btn-outline-light btn-lg btn-block\" to={link}>Enter</Link>\n        </CardBody>\n    </Card>\n    )\n};\n\nexport default CardTransparent;","import React from 'react';\nimport { UncontrolledCarousel } from 'reactstrap';\n\nconst items = [\n  {\n    src: '1.jpg',\n    altText: 'Slide 1',\n\n  },\n  {\n    src: '2.jpg',\n    altText: 'Slide 2',\n\n  },\n  {\n    src: '3.jpg',\n    altText: 'Slide 3',\n\n  }\n];\n\nconst Carousel = () => <UncontrolledCarousel items={items} indicators={false} />;\n\nexport default Carousel;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CardTransparent from './CardTransparent';\nimport { Container, Row, CardDeck } from 'reactstrap';\nimport Carousel from './Carousel';\n\nconst get = (isSignedIn) => {\n  if(isSignedIn === null){\n    return(\n      <div className=\"spinner-border text-light\" role=\"status\">\n         <span className=\"sr-only\">Loading...</span>\n      </div>\n      )\n  } else if (isSignedIn){\n    return(\n      <CardTransparent \n        src=\"pexels-photo-669621.jpg\" \n        title=\"See all Incidents\" \n        subtitle=\"See all reported Incidents by people\"\n        link=\"/view\"\n      />\n    )\n  } else {\n    return(\n      <React.Fragment>\n        <CardTransparent \n         src=\"pexels-photo-938958.jpg\" \n         title=\"From Insurance Company?\" \n         subtitle=\"Login here\"\n         link=\"/login\"\n        />\n        \n        <CardTransparent \n         src=\"pexels-photo-923681.jpg\" \n         title=\"From Police?\" \n         subtitle=\"Login to See all reported Incidents\"\n         link=\"/login\"\n        />\n      </React.Fragment>\n  )}\n}\nconst Home = (props) => {\n    return(\n    <React.Fragment>\n      <Carousel />\n      <Container>\n        <Row className = \"mt-5\">\n          <CardDeck>\n              <CardTransparent \n                src=\"pexels-photo-167964.jpg\" \n                title=\"Report an Accident\" \n                subtitle=\"Saw an Accident? Report with anonymity.\"\n                link=\"/report\"\n              />\n              {get(props.isSignedIn)}\n          </CardDeck>\n        </Row>\n      </Container>\n    </React.Fragment>    \n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn : state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps)(Home);","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport { Link } from 'react-router-dom';\nimport {getPosts} from \"../actions\";\nimport { Table } from 'reactstrap';\n\nclass View extends React.Component{\n    componentDidMount(){\n        this.props.getPosts();\n    }\n    \n    showPosts = (posts) => {\n        if(posts.length === 0){\n            return(\n                <div className=\"spinner-border text-light m-5 text-center\" style={{width: '3rem', height: '3rem'}} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n            )}else{\n           const postss =  posts.map((post, index)=>{\n               return(\n          <tbody key = {post._id}>\n            <tr>\n                <th scope=\"row\">{index+1}</th>\n        <td>{post._id}</td>\n            <td>{post.date}</td>\n                <td><Link to={`/viewOne/${post._id}`}>Click here</Link></td>\n            </tr> \n  </tbody>\n                  )\n  })\n              return(\n    <Table dark bordered style={{backgroundColor: 'rgba(1,1,1,0.6)'}}>\n    <thead>\n    <tr>\n      <th scope=\"col\">S.No</th>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Date of Report</th>\n      <th scope=\"col\">More Info</th>\n    </tr>\n  </thead>\n  {postss}\n   </Table>\n                  ) }}\n                     \n                \n    render(){\n    return(\n    <div className = \"container mt-5\">\n  {this.showPosts(this.props.posts)}\n    </div>    \n    )}}\n\nconst mapStateToProps = (state) => {\n    return{\n    posts: state.report.posts\n    }\n}\n\nexport default connect(mapStateToProps, {getPosts})(View);","import React from 'react';\nimport {connect} from \"react-redux\"\nimport { Field, reduxForm } from 'redux-form';\nimport {signIn} from \"../actions\";\nimport { Button, Container, Form, Input, FormGroup, Label } from 'reactstrap';\nconst qs = require('qs');\n\n\n\nclass login extends React.Component{\n    renderInput({input, label}){\n        const inputField = (label === \"Email\")?<Input {...input} type= \"email\"  required id={label}/>: <Input {...input} type= \"password\" id={label} required/>;\n        return(\n        <FormGroup>\n        <Label for={label} className=\"text-light\">{label}</Label>\n        {inputField}\n        </FormGroup>\n    )}\n     onSubmit = (data) => {\n        this.props.signIn(qs.stringify(data));\n        \n    }\n    render(){\n        return(\n            <Container>\n            <Form className = \"mt-5\" onSubmit= {this.props.handleSubmit(this.onSubmit)}>\n            <Field name = \"email\" component={this.renderInput} label=\"Email\"/>\n            <Field name = \"password\" component={this.renderInput} label=\"Password\"/>\n            <Button outline color=\"light\" >Login</Button>\n            </Form>\n            </Container>\n    )}\n}\n\nexport default connect(null, {signIn})(reduxForm({form: \"login\"})(login));","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport { Field, reduxForm } from 'redux-form';\nimport { getLocation, locationError} from \"../actions\";\nimport api from '../api/api';\nimport history from '../history';\nimport { Input, Button, Label, InputGroup, InputGroupAddon, FormGroup, Container, Row, Form} from 'reactstrap';\nconst qs = require('qs');\n\n\nclass Report extends React.Component{\n    locError = (e) => {\n        e.preventDefault();\n        this.props.locationError();\n    }\n    renderInput({input, label}){\n        switch (label) {\n            case 'First Name':\n            case 'Last Name':\n                return(\n                <div className=\"col\">\n                <Label htmlFor={label} className=\"text-light mt-3\"><h5>{label}*</h5></Label>\n                <Input id={label} {...input} type=\"text\" placeholder={label}  required/>\n                </div>\n                )\n            case 'Mobile No.':\n                return(\n            <InputGroup className=\"mb-3 mt-4\">\n            <InputGroupAddon addonType=\"prepend\">+91</InputGroupAddon>\n            <Input type=\"number\" {...input} aria-describedby=\"code\" min=\"4000000000\" max=\"9999999999\" placeholder={label} required />\n            </InputGroup>\n            )\n            case 'Additional Details' :\n                return(\n            <FormGroup>\n            <Label for=\"{label}\" className=\"text-light mt-3\"><h4>{label}</h4></Label>\n            <Input type=\"textarea\"  htmlFor=\"form\" {...input} id=\"{label}\" rows=\"3\" />\n            </FormGroup>\n            )\n            default: \n        }\n    }\n    \n    componentDidMount(){\n        this.props.getLocation();\n        }\n    getMap = () => {\n        if(this.props.latitude!=='NA' && this.props.latitude!=null){\n            return(\n    <>            \n    <div className=\"text-light mt-3\" id=\"hehe\">\n        <h5>Is this your current location?</h5>\n        <Button onClick={this.locationYes} color=\"success\" className=\"mb-1\">Yes, submit Report</Button>\n        <Button onClick={this.locError} color = \"danger\" className=\"ml-2 mb-1\">No</Button>\n    </div>\n    <iframe\n        title='map'\n        width= \"100%\"\n        height=\"400\"\n        frameBorder=\"0\" \n        src={`https://www.google.com/maps/embed/v1/search?key=AIzaSyDvc3HWIYxPNjvJVu4oNTLKMaAY3toI2pQ\n        &q=hospitals+near+me&center=${this.props.latitude},${this.props.longitude}\n        &zoom=20`} allowFullScreen>\n    </iframe>\n    </>\n        )\n        } else if (this.props.latitude == null){\n        return(\n            <div className=\"spinner-border text-light m-5 text-center\" style={{width: '3rem', height: '3rem'}} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        )\n    } else{\n        return(\n            <div className=\"text-light mt-3\">\n                    <h3>Cannot get your Location. Please add accident location details in additional details</h3>\n                    <Button color=\"success\" className=\"mt-3\" block>Submit Report</Button>  \n            </div>\n        )\n    }}\n     onSubmit = async (data) => {\n         const response = await api.post(\"/report\", qs.stringify({\n             first: data.first,\n             last: data.last,\n             mobile: data.mobile,\n             extra: data.extra,\n             latitude: this.props.latitude,\n             longitude: this.props.latitude\n         }))\n         if(response.data.message === \"success\"){\n             history.push(\"/\");\n         }\n    }\n    render(){\n        return(\n            <Container>\n            <Form id=\"form\" className = \"container mt-5\" onSubmit= {this.props.handleSubmit(this.onSubmit)}>\n                <Row>\n                    <Field name = \"first\" component={this.renderInput} label=\"First Name\"/>\n                    <Field name = \"last\" component={this.renderInput} label=\"Last Name\"/>\n                </Row>\n                    <Field name=\"mobile\" component={this.renderInput} label=\"Mobile No.\"/>\n                    <Field name=\"extra\" component={this.renderInput} label=\"Additional Details\"/>\n                <div id=\"map\">\n                {this.getMap()}\n                </div>\n                \n            </Form>\n            </Container>\n    )}\n}\nconst mapStateToProps = state =>{\n  return {\n    latitude: state.location.latitude,\n    longitude : state.location.longitude\n  }\n}\n\nexport default connect(mapStateToProps, {getLocation, locationError})(reduxForm({form: \"Report\"})(Report));","import React from \"react\";\nimport { getPost } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { CardGroup, Button, Card, CardBody, Container, CardTitle, CardText, CardFooter, CardColumns,ModalBody, CardImg, ModalFooter, Modal} from 'reactstrap';\n\nclass ViewOne extends React.Component{\n    \n    constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n    \n    \n  }\n    \n    componentDidMount(){this.props.getPost(this.props.match.params.id);}\n    \n    getMap = () => {\n        if(this.props.post && this.props.post.latitude!==\"NA\" && this.props.post.latitude!==\"undefined\")\n        return(\n            <Card>\n                <CardBody>\n                <h1 className=\"card-title text-center\">Location</h1>\n                <hr/>\n                <iframe title=\"map\"\n                    width=\"100%\"\n                    height=\"400\"\n                    frameBorder=\"0\" \n                    src={`https://www.google.com/maps/embed/v1/view?key=AIzaSyDvc3HWIYxPNjvJVu4oNTLKMaAY3toI2pQ\n                    &center=${this.props.post.latitude},${this.props.post.longitude}\n                    &zoom=20`} allowFullScreen>\n                </iframe>\n                <hr/>\n                <CardText>\n                    The accident happened around this area. You can scroll the map for more information\n                </CardText>\n                <CardFooter>\n                    <small className=\"text-muted \">Reported on {this.props.post.date}</small>\n                </CardFooter>\n                </CardBody>\n            </Card>\n            )}\n            \n    getPhoto = (photos) =>{\n        if(photos.length>0){\n            const pics = photos.map((photo) =>{\n                return(\n                    <Card key={photo}>\n                        <CardImg top src={photo} alt=\"\"/>\n                        <Button color=\"dark\" outline block onClick={this.toggle}>View</Button>\n                        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                         <ModalBody>\n                            <img src ={photo} alt=\"\" width=\"100%\"/>\n                         </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"dark\" outline block onClick={this.toggle}>Close</Button>\n                        </ModalFooter>\n                        </Modal>\n                    </Card>\n                        )\n                })\n            return pics;\n                }}\n                \n    getPhotos = () => {\n        return(\n             <Card className=\"ml-1\">\n                <CardBody>\n                    <CardTitle>\n                        <h1 className=\"text-center\">Photographs</h1>\n                    </CardTitle>\n                <hr/>\n                    <CardColumns>\n                        { this.getPhoto(this.props.post.photos) }\n                    </CardColumns>\n                </CardBody>\n             </Card>\n             )}\n    \n    getDetails = () => {\n        return (\n        <Card class=\"ml-1\">\n    <CardBody>\n        <CardTitle>\n      <h1 class=\"text-center\">Details</h1>\n      </CardTitle>\n      <hr/>\n      <CardText className=\"mt-4\"><span class = \"h5\"><b>Reported By: </b></span>{this.props.post.name}</CardText>\n      <CardText><span class = \"h5\"><b>Mobile Number: </b></span>+91{this.props.post.mobile}</CardText>\n      <CardText><span class = \"h5\"><b>Additional Details: </b></span>{this.props.post.extra}</CardText>\n      <hr/>\n      <CardText><span class = \"h5\"><b>Injuries: </b></span>{this.props.post.injuries}</CardText>\n      <CardText><span class = \"h5\"><b>Interview with eyewitness: </b></span>{this.props.post.interview}</CardText>\n      <CardText><span class = \"h5\"><b>Reason for Accident: </b></span>{this.props.post.reason}</CardText>\n      <CardText><span class = \"h5\"><b>Road Conditions: </b></span>{this.props.post.conditions}</CardText>\n      <CardText><span class = \"h5\"><b>Speed: </b></span>{this.props.post.speed}</CardText>\n      <hr/>\n\n      <CardFooter>\n       <Link class = \"btn btn-outline-dark btn-block\" to = {`/add/${this.props.match.params.id}`}>Add Photographs</Link>\n       <Link class = \"btn btn-outline-dark btn-block\" to = {`/addinfo/${this.props.match.params.id}`}>Add/Edit Information</Link>\n    </CardFooter>\n    </CardBody>\n</Card>\n            )}\n    \n    render(){\n        if(this.props.post._id){\n            return(\n        <Container>\n            <CardGroup>\n        {this.getMap()}\n        {this.getPhotos()}\n        {this.getDetails()}\n        </CardGroup>\n         </Container>)\n            \n        } else {\n            return(<div></div>)\n        }\n        \n    }\n}\n\nconst mapStateToPros = state =>{\n    return{\n        post: state.report.post\n    }\n}\nexport default connect(mapStateToPros, {getPost})(ViewOne);","import React from \"react\";\nimport { Router, Route, Switch } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport View from \"./View\";\nimport Login from \"./Login\";\nimport Report from \"./Report\";\nimport ViewOne from \"./ViewOne\";\nimport history from '../history';\n\nclass App extends React.Component {\n    render() {\n        return(\n            <div>\n                <Router history={history}>\n                <div>\n                <Header />\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/view\" exact component={View} />\n                    <Route path=\"/login\" exact component={Login} />\n                    <Route path=\"/report\" exact component={Report} />\n                    <Route path =\"/viewOne/:id\" exact component={ViewOne} />\n                </Switch>\n                </div>\n                </Router>\n            </div>\n            \n            );\n    }\n}\n\nexport default App;","const INTIAL_STATE = {\n  isSignedIn: null,\n  user: {}\n};\n\nexport default (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SIGN_IN':\n      return { ...state, isSignedIn: true, user: action.payload };\n    case 'SIGN_OUT':\n      return { ...state, isSignedIn: false, user: {} };\n    case 'GET_INFO':\n      return {...state, isSignedIn : action.payload.isSignedIn, user: action.payload.user};\n    \n    default:\n      return state;\n  }\n};","const INTIAL_STATE = {\n  latitude: null,\n  longitude: null\n};\n\nexport default (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case 'GET_LOCATION':\n      return { ...state, latitude: action.payload.latitude, longitude: action.payload.longitude };\n    case 'LOCATION_ERROR':\n      return {...state, latitude: \"NA\", longitude: \"NA\" };\n    \n    default:\n      return state;\n  }\n};","const INTIAL_STATE = {\n  posts: [],\n  post: {}\n};\n\nexport default (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case 'GET_POSTS':\n      return { ...state, posts: action.payload };\n    case 'GET_POST':\n      return {...state, post: action.payload };\n    \n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport locationReducer from './locationReducer';\nimport postReducer from './postReducer';\n\n\n\n\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  location: locationReducer,\n  report: postReducer\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './components/App';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <Provider store={createStore(reducers, applyMiddleware(reduxThunk))}>\n    <App />\n    </Provider>\n    , \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}